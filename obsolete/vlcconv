#!/bin/bash

# global
C_MODE=
C_AUDIOFLAG='--audio'

for arg in "$@"; do
	if [[ "x$arg" = "x$C_AUDIOFLAG" ]]; then
		C_MODE=audio
	elif [[ "x$arg" = "x--help" ]]; then
		cat <<EOHELP
$0 converts audio and video files using the VLC media streamer; to Theora video or Vorbis audio, in OGG container.

USAGE

	$0 MEDIAFILE

	$0 --audio MEDIAFILE

By defult, $0 will convert the file to Theora.

Specify --audio option to encode to Vorbis (audio only).

===

Copyright Tai Kedzierski 2015

This software is Free Software, released under the terms of the GNU GPLv3

You are free to use this software for any purpose, without warranty, etc. You have been warned.

Conversion code based on the help instructions at https://wiki.videolan.org/How_to_Batch_Encode/#Unix_.2F_Linux
EOHELP
	fi
done

vcodec="theora"
acodec="vorb"
vbitrate="1024"
abitrate="128"
mux="ogg"

VC_Q="vlc://quit"

# For Linux

vlc="/usr/bin/vlc"

if [ ! -e "$vlc" ]; then
	echo "Command '$vlc' does not exist"
	exit 1
fi

for file in "$@"; do
	if [[ $file = $C_AUDIOFLAG || $file = '--help' ]]; then
		continue # skip the flags of course!
	fi
	# ===================
	if [[ ! -e "$file" ]]; then
		echo "Skipping '$file' as we cannot fin it"
		continue
	fi
	echo "=> Transcoding '$file'... "

	dst=$(dirname "$file")
	new=$(basename "$file" | sed 's@\.[a-z][a-z][a-z]$@@').$mux
	VCOPT_STD=standard{mux=$mux,dst=\"$dst/$new\",access=file}
	if [[ "x$C_MODE" = 'xaudio' ]]; then
        	$vlc -I dummy -q "$file" --sout "#transcode{acodec=$acodec,ab=$abitrate}:$VCOPT_STD" $VC_Q
	else
                $vlc -I dummy -q "$file" --sout "#transcode{vcodec=$vcodec,vb=$vbitrate}:$VCOPT_STD" $VC_Q
	fi
	ls -lh "$file" "$dst/$new"
	echo
done
