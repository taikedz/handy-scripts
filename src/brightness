#!/bin/bash

### brightness Usage:help
#
# Display or switch the brightness level of the main screen.
#
# USAGE
# =====
#
#	brightness [INDEX] [--debug]
#
# INDEX : a float or int value from 0.0 (screen off) to 10.0 (full brightness).
# --debug : print debug/verbose information
#
# Examples:
#
# 	brightness 8
# 	brightness 0.5
#
# SETTINGS
# ========
#
# Configuration of the max brightness and actual brightness control paths are in
# the /etc/brightness.conf file
#
# This script was developed on a Lenovo Flex 14 with the following defaults:
#
#	MAX /sys/class/backlight/intel_backlight/max_brightness
# 	ACTUAL /sys/class/backlight/intel_backlight/brightness
#
# Override the settings as required.
#
# * MAX is the path to the file holding the maximum raw brightness value.
# * ACTUAL is the path to the brightness setting.
#
###/doc

#%include std/debug.sh
#%include std/out.sh
#%include std/autohelp.sh


BRIGHTCONFIG=/etc/brightness.conf

if [[ "$UID" -ne 0 ]]; then
	sudo "$(which $0)" "$@"
	exit
fi

if [[ -f "$BRIGHTCONFIG" ]]; then
	debug:print "Getting settings from $BRIGHTCONFIG"
	export BRIGHTPATH=$(egrep '^ACTUAL' "$BRIGHTCONFIG"|awk '{print $2}')
	export MAXBRIGHTPATH=$(egrep '^MAX' "$BRIGHTCONFIG"|awk '{print $2}')

	chmod 644 "$BRIGHTPATH"
	chmod 644 "$MAXBRIGHTPATH"
else
	debug:print "Creating initial brightness config"
	cat <<EOF > "$BRIGHTCONFIG"
ACTUAL /sys/class/backlight/intel_backlight/brightness
MAX /sys/class/backlight/intel_backlight/max_brightness
EOF
fi

# =============================================Â¬
# This script developed with defaults for the Lenovo Flex 14 ; paths may be different for your device

MAXBRIGHT=$(cat $MAXBRIGHTPATH)

if [[ -z "$MAXBRIGHT" ]]; then
	out:fail "You need to configure MAX and ACTUAL for your system in $BRIGHTCONFIG (try running \`ls /sys/class/backlight/\` ...)"
fi
# _____________________________________________/

function noargs {
	curbright=$(cat "$BRIGHTPATH")
	cbidx=$(python -c "import math ; prec = 10.0 ; print( str(math.ceil( (10*prec * $curbright) / $MAXBRIGHT)/prec ))")

	out:info "Current brightness index: $cbidx (raw value: $curbright)"
	exit
}

if [[ -z "$*" ]]; then
	noargs
fi

# Process all arguments as INDEXes
# In case the user sets their screen too dark and
# needs to press <up> and enter a new value and
# forget to delete previous index properly.
while [[ -n "$*" ]]; do
	mybright=$1 ; shift
	if [[ "$mybright" =~ --debug ]]; then
		mybright=$1 ; shift
	fi

	debug:print "Brightness is set in $BRIGHTPATH"
	debug:print "Max brightness is determined in $MAXBRIGHTPATH"

	if [[ -z "$mybright" ]]; then
		noargs
	fi


	if [[ ! "$mybright" =~ $(echo '^[0-9]+(\.[0-9]+)?$') ]] || python -c "$mybright > 10 or exit(1)" ; then
		out:fail "Provide a numerical value from 0 to 10 only"
	fi
	mybright=$(python -c "print( int(($mybright/10.0)*$MAXBRIGHT))")


	debug:print "Setting brightness $mybright"
	echo $mybright |sudo tee $BRIGHTPATH >/dev/null
done
