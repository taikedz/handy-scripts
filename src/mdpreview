#!/bin/bash

### mdpreview Usage:help
# Preview a markdown file
###/doc

#%include bashout readargs kvreader autohelp

set -u

if [[ -z "${MDEXEC+x}" ]]; then
	MDEXEC=$(which markdown_py 2>/dev/null || which markdown 2>/dev/null)
fi

if [[ -z "${BREXEC+x}" ]]; then
	BREXEC=$(which sensible-browser 2>/dev/null || which firefox 2>/dev/null || which chromium-browser 2>/dev/null || which elinks 2>/dev/null)
fi
TMPDIR=/tmp


if [[ -z "${CSSFILES+x}" ]]; then
	CSSFILES="/etc/mdpreview/styles.css:$HOME/.config/mdpreview/styles.css:./styles.css"
fi

if [[ -z "$MDEXEC" ]] || [[ ! -f "$MDEXEC" ]]; then
	faile "No markdown processor"
fi

DEST=$(argread '-d')
if [[ -z "$DEST" ]]; then
	DEST="$TMPDIR"
fi

if [[ ! -d "$DEST" ]]; then
	faile "Invalid destination [$DEST]"
fi

function makeafile {
	if [[ "$DEST" = /tmp ]]; then
		echo "$(mktemp -d /tmp)"
	fi
}

ALLFILES=
for x in "$@"; do
	tfile=$(mktemp -p ./ .previewXXXX.html)
	ALLFILES="$ALLFILES $tfile"
	
	echo '<style>' > "$tfile"
	echo "$CSSFILES"|sed 's/:/\n/g'|while read STYLEFILE; do
		if [[ -f "$STYLEFILE" ]]; then
			cat "$STYLEFILE"  >> "$tfile"
		fi
	done
	echo '</style>' >> "$tfile"

	"$MDEXEC" "$x" >> "$tfile"

	if [[ -n "$BREXEC" ]]; then
		"$BREXEC" $tfile 2>/dev/null >/dev/null &
	fi
done

if [[ -z "$BREXEC" ]]; then
	infoe "$ALLFILES"
else
	sleep 2
	rm $ALLFILES
fi
