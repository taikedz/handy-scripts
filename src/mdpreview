#!/bin/bash

### mdpreview Usage:help
# Preview a markdown file
#
# USAGE
# =====
#
# 	mdpreview FILEA.md FILEB.md ...
#
# Supply styles in ./styles.css , or see the CSSFILES environment variable definition below.
#
# ENVIRONMENT VARIABLES
# =====================
#
# MDEXEC - path to executable markdown processor. By default searches for `markdown_py` of `markdown`
#
#  If no markdown processor is supplied or is located, then mdpreview will fail.
#
#
#
# BREXEC - searches for a valid browser; by default tries to locate in order
#   sensible-browser, firefox, chromium-browser, elinks
#
#   If no suitable browser is found or supplied, then the preview files are listed instead of being subsequently removed.
#
# CSSFILES - by default is set to /etc/mdpreview/styles.css:$HOME/.config/mdpreview/styles.css:./styles.css
#
#  Can be overridden by setting the environment variable.
#
#
# DEST - the destination for generated HTML preview files. By default, this is /tmp
###/doc

#%include bashout readargs kvreader autohelp getbin

set -u

if [[ -z "${MDEXEC+x}" ]]; then
	MDEXEC=$(getbin markdown_py markdown )
fi

if [[ -z "${BREXEC+x}" ]]; then
	BREXEC=$(getbin sensible-browser firefox chromium-browser elinks)
fi


if [[ -z "${CSSFILES+x}" ]]; then
	CSSFILES="/etc/mdpreview/styles.css:$HOME/.config/mdpreview/styles.css:./styles.css"
fi

if [[ -z "$MDEXEC" ]] || [[ ! -f "$MDEXEC" ]]; then
	faile "No markdown processor"
fi

if [[ -z "${DEST+x}" ]]; then
	DEST="./"
fi

if [[ ! -d "$DEST" ]]; then
	faile "Invalid destination folder [$DEST]"
fi

ALLFILES=
for x in "$@"; do
	tfile=$(mktemp -p ./ .previewXXXX.html)
	ALLFILES="$ALLFILES $tfile"
	
	echo '<style>' > "$tfile"
	echo "$CSSFILES"|sed 's/:/\n/g'|while read STYLEFILE; do
		if [[ -f "$STYLEFILE" ]]; then
			cat "$STYLEFILE"  >> "$tfile"
		fi
	done
	echo '</style>' >> "$tfile"

	"$MDEXEC" "$x" >> "$tfile"

	if [[ -n "$BREXEC" ]]; then
		"$BREXEC" $tfile 2>/dev/null >/dev/null &
	fi
done

if [[ -z "$BREXEC" ]]; then
	infoe "$ALLFILES"
else
	sleep 2
	rm $ALLFILES
fi
