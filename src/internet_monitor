#!/bin/bash

### network-speakmonitor Usage:help
#
# Make a verbal auditory report when Internet access changes
#
# ENVIRONMENT VARIABLES
# =====================
#
# IMINTERVAL -- int of seconds delay between network status tests
# IMPINGNUM  -- number of pings per test
# STATEDIR   -- directory in which to save the wstatus.txt log file
#
###/doc

#%include std/autohelp.sh
#%include std/out.sh
#%include std/debug.sh

autohelp:check "$@"

if [[ -z "$(which espeak)" ]]; then
	out:fail "Install espeak"
fi

set -eu

if [[ -z "${IMINTERVAL:-}" ]]; then
	IMINTERVAL=30
fi

if [[ -z "${IMPINGNUM:-}" ]]; then
	IMPINGNUM=2
fi

if [[ -z "${STATEDIR:-}" ]]; then
	STATEDIR=$HOME/scratch/wirelessmonitoring
fi

debug:print "Saving to $STATEDIR"
debug:print "Test interval: ${IMINTERVAL}s"
debug:print "Pings per test: $IMPINGNUM"

# ------

mkdir "$STATEDIR" -p
cd "$STATEDIR"

UPSTATE="up ---------Â¬"
DNSTATE="down _______/"

STATE="$UPSTATE"
STATEFILE=wstatus.txt

out:info "STATEFILE @ $STATEDIR/$STATEFILE"

# A function to register the current state
# If the current state is the same as the last, then
#  no particular action is taken.
function register
{
	TARGET=$1; shift
	debug:print "Registering state $TARGET"

	if [[ $(tail -n 1 "$STATEFILE") =~ "$TARGET" ]] && [[ -z "$*" ]]; then
		return
	fi

	STATREPORT="$(date "+%F %T") $TARGET"
	echo "$STATREPORT" |tee -a "$STATEFILE"
	espeak "Internet status: $(echo "$TARGET"|awk '{print $1}')"
}

register starting

while true
do
	ping 8.8.8.8 -c "$IMPINGNUM" 2>&1 > /dev/null && {
		STATE="$UPSTATE"
	} || {
		STATE="$DNSTATE"
	}
	register "$STATE"
	sleep $IMINTERVAL
done
