#! /bin/bash

if [[ $UID != 0 ]]; then
	echo "You are not root."
	exit 1
fi

# Commented iptables firewalll restructuring
# For learning and securing a standard web host.
# See http://wiki.centos.org/HowTos/Network/IPTables 
# for more info on iptables command

# [1] if we have connected from a remote machine, make sure
#    we maintain connection!
# add a live rule
iptables -P INPUT ACCEPT

# [2] flush current rules table, which closes all external
#   connections if policy is DROP - hence step 1.
iptables -F

# [3] add our first rule on incoming connections:
# "-m state" load module state
# "--state ESTABLISHED,RELATED" any connections that originated
#     from us
# "-j ACCEPT" jump to setting the target action, which is ACCEPT
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# [4] Accept any input for protocol ("-p") ICMP
iptables -A INPUT -p icmp -j ACCEPT

# [5] Accept anything from localhost -- the distinction is not visible
# when dumping from iptables -L
iptables -A INPUT -i lo -j ACCEPT

# [6] Accept incoming new ssh (tcp port 22) connections
# existing connections in general are served by rule [3]
iptables -A INPUT -m state --state NEW -p tcp --dport 22 -j ACCEPT

# [6.1] XTRA - allow other connections - customize as necessary
iptables -A INPUT -m state --state NEW -p tcp --dport 80   -j ACCEPT
iptables -A INPUT -m state --state NEW -p tcp --dport 443   -j ACCEPT
#iptables -A INPUT -m state --state NEW -p tcp --dport 3306 -j ACCEPT
#     port 80 is for Apache; 3306 is for MySQL, for example.


# [7] Reject everything else
iptables -P INPUT DROP

# [8] Reject all forwards (we are not a router)
iptables -P FORWARD DROP

# [9] Accept any outgoing traffic
# OK for a desktop, not for a server?
#iptables -P OUTPUT ACCEPT

# Allow outgoing requests from already established transactions
iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# Limit outgoing connections
iptables -A OUTPUT -m state --state NEW -p tcp --dport 80 -j ACCEPT
iptables -A OUTPUT -m state --state NEW -p tcp --dport 443 -j ACCEPT
iptables -A OUTPUT -m state --state NEW -p tcp --dport 8080 -j ACCEPT
iptables -A OUTPUT -m state --state NEW -p tcp --dport 25 -j ACCEPT
iptables -A OUTPUT -m state --state NEW -p tcp  --dport 53 -j ACCEPT # DNS queries!
iptables -A OUTPUT -m state --state NEW -p udp  --dport 53 -j ACCEPT # DNS
iptables -P OUTPUT DROP


# [10] Save the settings we've just defined so that
# they apply when we reboot

if [[ "x$(which apt)" != "x" ]]; then # checking for apt, if present presume Debian/Ubuntu
	if [[ "x$(dpkg --get-selections | grep iptables-persistent)" = 'x' ]]; then
		read -p "Install iptables-persistent? " RY
		if [[ $RY = 'y' ]]; then
			apt install iptables-persistent
		fi
	else
		dpkg-reconfigure iptables-persistent # Debian/Ubuntu
	fi
else # presume CentOS... very lazy, i know
	/sbin/service iptables save # RHEL/CentOS
fi
