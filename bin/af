#! /bin/bash

set -uo pipefail

ASSUMEYES=
PACKAGELIST=
ACTION=
CLEANUP=
UPDATE=

if [[ $(uname -a | grep 'Ubuntu' -c) -lt 1 ]]; then
	if [[ ! "$@" =~ -r ]]; then
		echo "This script only works on Ubuntu and its derivatives. Use the -f option if you want to force usage"
		exit 1
	fi
fi

function printhelp {
	cat <<EOF

$(basename $0) - the 'af' script

This script is used on Ubuntu systems to perform common package management tasks.

If your distribution is derived from Ubuntu but this script does not want to run, use the '-f' option to force execution.

The tool uses sudo to run actions that require root.

Usage

	$(basename $0) [ACTION] TERMS ... [OPTIONS]

ACTIONS

-l|--list
	List installed packages, uses \`less\` pager.

-s|--show
	Show details of packages, uses \`less\`pager.

-i|--install
	Install specified packages.

-r|remove
	Remove specified packages

-p|--purge
	Purge specified packages - removes both the packages an configuration files

-g|--upgrade
	Upgrade all packages on the system within the same release.

-R|--release-upgrade
	Do a release upgrade.

OPTIONS

-y|--assume-yes
	Use the --assume-yes flag for operations which would normally prompt you.

-ny|--no-assume-yes
	Do not use the --assume-yes flag. You will be prompted
	Supercedes a previously set '-y' option.

-u|--update
	Run an update of package listings.
	Can be specified without actions, or used with other actions.

-nu|--no-update
	Don't run an update of package listings.
	Supercedes a previously set '-u' option.

-c|--cleanup
	Perform an autoclean and autoremove.

-nc|--no-cleanup
	Donot perform any autoclean or autoremove
	Supercedes a previously set '-c' option.

EOF
}

# Echoes 'yes' on any confirmation, no in all other cases
function areyousure {
	read -p "$@ y/N> "
	yespat='^y|Y|yes|YES|aye$'
	if [[ "$REPLY" =~ $yespat ]]; then
		echo "yes"
	else
		echo "no"
	fi
}

while [[ -n "$@" ]]; do
	ARG="$1" ; shift
	case "$ARG" in
# ACTIONS
	-l|--list)
		ACTION=list
		;;
	-i|--install)
		ACTION=install
		;;
	-r|--remove)
		ACTION=remove
		;;
	-p|--purge)
		ACTION=purge
		;;
	-s|--show)
		ACTION=show
		;;
	-g|--upgrade)
		ACTION=upgrade
		;;
	-R|--release-upgrade)
		ACTION=uprelease
		;;
# MODES
	-f)
		: # do nothing, used for forcing execution
		;;
	-y|--assume-yes)
		ASSUMEYES=-y
		;;
	-ny|--no-assume-yes)
		ASSUMEYES=
		;;
	-c|--cleanup)
		CLEANUP=yes
		;;
	-nc|--no-cleanup)
		CLEANUP=no
		;;
	-u|--update)
		UPDATE=yes
		;;
	-nu|--no-update)
		UPDATE=no
		;;
	--help)
		printhelp
		exit 0
		;;
	*)
		PACKAGELIST="$PACKAGELIST $ARG"
		;;
	esac
done

if [[ $UPDATE = yes ]]; then
	sudo apt update
fi


if [[ $ACTION = install ]]; then
	[[ -n "$PACKAGELIST" ]] && sudo apt install $PACKAGELIST $ASSUMEYES
elif [[ $ACTION = remove ]]; then
	[[ -n "$PACKAGELIST" ]] && sudo apt remove $PACKAGELIST $ASSUMEYES
elif [[ $ACTION = purge ]]; then
	[[ -n "$PACKAGELIST" ]] && sudo apt-get purge $PACKAGELIST $ASSUMEYES
elif [[ $ACTION = upgrade ]]; then
	if [[ -n "$PACKAGELIST" ]] && [[ "$ASSUMEYES" != '-y' ]]; then
		[[ $( areyousure "Upgrade the entire system and all packages, not just [$PACKAGELIST]?" ) != yes ]] && exit 1
	fi
	sudo apt upgrade $ASSUMEYES
elif [[ $ACTION = uprelease ]]; then
	which "do-release-upgrade" >/dev/null 2>&1 || "$0" --install update-manager-core $ASSUMEYES
	sudo "do-release-upgrade" $ASSUMEYES
elif [[ $ACTION = list ]]; then
	dpkg -l | less
elif [[ $ACTION = show ]]; then
	[[ -n "$PACKAGELIST" ]] && apt-cache show $PACKAGELIST | sed -r 's/^(Package: )/[1;33m===[0m\n\1/' | less -R
elif [[ -z "$ACTION" ]]; then
	[[ -n "$PACKAGELIST" ]] && apt-cache search $PACKAGELIST | less
fi

if [[ $CLEANUP = yes ]]; then
	sudo apt autoremove $ASSUMEYES
	sudo apt autoclean $ASSUMEYES
fi
